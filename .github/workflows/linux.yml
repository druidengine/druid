name: linux

permissions:
  contents: read
  packages: read

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    strategy:
      matrix:
        config:
          # - preset: x64-linux-gcc-release
          #   compiler: gcc
          #   clang-tidy: false
          - preset: x64-linux-clang-debug
            compiler: clang
            clang-tidy: true

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/druidengine/images/ubuntu-dev:main
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    env:
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/.vcpkg_cache
      VCPKG_BINARY_SOURCES: "default"

    steps:
      - uses: actions/checkout@v4

      - name: vcpkg-cache-directory
        run: mkdir -p $VCPKG_DEFAULT_BINARY_CACHE
        shell: bash

      - name: vcpkg-cache-restore
        uses: actions/cache@v4
        with:
          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
          key: vcpkg-${{ matrix.config.compiler }}-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            vcpkg-${{ matrix.config.compiler }}-

      - name: cmake-configure
        run: cmake --preset ${{ matrix.config.preset }}

      - name: cmake-build
        run: cmake --build --preset ${{ matrix.config.preset }} --parallel $(( $(nproc --all) + 1 ))

      - name: cmake-test
        run: ctest --preset ${{ matrix.config.preset }} --parallel $(( $(nproc --all) + 1 ))

      - name: clang-tidy
        if: ${{ matrix.config.clang-tidy }}
        run: cmake --build --preset ${{ matrix.config.preset }} --target clang-tidy
