name: lint

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    container: ubuntu:25.04

    env:
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/.vcpkg_cache
      VCPKG_BINARY_SOURCES: "default"

    steps:
    - uses: actions/checkout@v4

    - name: vcpkg-cache-directory
      run: mkdir -p $VCPKG_DEFAULT_BINARY_CACHE
      shell: bash
    
    - name: vcpkg-cache-restore
      uses: actions/cache@v4
      with:
        path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
        key: vcpkg-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
        restore-keys: |
          vcpkg-${{ runner.os }}-

    - name: install-tools-linux
      run: |
          apt update -y
          apt upgrade -y
          apt install -y curl tar git zip unzip make autoconf libtool python3-jinja2 ninja-build
          apt install -y clang-tidy-20 clang-format-20 cmake
          update-alternatives --install /usr/bin/clang clang /usr/bin/clang-20 200
          update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-20 200
          update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-20 200
          update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-20 200
          update-alternatives --install /usr/bin/run-clang-tidy run-clang-tidy /usr/bin/run-clang-tidy-20 200

    - name: install-dependencies-linux
      run: |
        apt install -y '^libxcb.*-dev' libfontconfig1-dev libfreetype6-dev libx11-dev libxext-dev libxfixes-dev libgl1-mesa-dev libglu1-mesa-dev libegl1-mesa-dev
        apt install -y libxrender-dev libxi-dev libxcb1-dev libxcb-glx0-dev libxcb-keysyms1-dev libxcb-image0-dev libxcb-shm0-dev libx11-xcb-dev libxkbcommon-dev
        apt install -y libxkbcommon-x11-dev libxcb-icccm4-dev libxcb-sync0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-render-util0-dev libxinerama-dev

    - name: cmake-configure
      run: cmake --preset x64-linux-clang-tidy
      shell: bash

    - name: run-clang-tidy
      run: run-clang-tidy -p build -j $(( $(nproc --all) + 1 ))
      shell: bash
